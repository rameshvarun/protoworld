[
  {
    "@t": "ProtoObject",
    "data": {
      "annotations": {
        "name": "RootPackage"
      },
      "slot_values": {
        "parent": {
          "@r": 1
        },
        "CorePackage": {
          "@t": "ProtoObject",
          "data": {
            "annotations": {
              "name": "CorePackage"
            },
            "slot_values": {
              "parent": {
                "@r": 1
              },
              "TopObject": {
                "@r": 2
              },
              "TraitsPackage": {
                "@r": 1
              }
            },
            "slot_annotations": {},
            "prototype_slots": [
              "parent"
            ]
          }
        },
        "InterfacePackage": {
          "@t": "ProtoObject",
          "data": {
            "annotations": {
              "name": "InterfacePackage"
            },
            "slot_values": {
              "parent": {
                "@r": 1
              },
              "WindowManager": {
                "@t": "ProtoObject",
                "data": {
                  "annotations": {
                    "name": "WindowManager"
                  },
                  "slot_values": {
                    "windows": [],
                    "Render": {
                      "@t": "MessageHandler",
                      "data": "function() { return h('div', null, ['Open Windows:', this.windows.map(w => w.Render()) ]); }"
                    },
                    "Update": {
                      "@t": "MessageHandler",
                      "data": "function(dt) { this.windows.forEach(w => w.Update(dt)); }"
                    },
                    "AddWindow": {
                      "@t": "MessageHandler",
                      "data": "function(window) { this.windows.push(window); }"
                    },
                    "RemoveWindow": {
                      "@t": "MessageHandler",
                      "data": "function(window) { this.windows = this.windows.filter(item => item !== window); }"
                    },
                    "parent": {
                      "@r": 2
                    }
                  },
                  "slot_annotations": {},
                  "prototype_slots": [
                    "parent"
                  ]
                }
              },
              "TraitsWindow": {
                "@r": 3
              },
              "HandlerEditor": {
                "@t": "ProtoObject",
                "data": {
                  "annotations": {
                    "name": "HandlerEditor",
                    "description": "The default editor for message handlers."
                  },
                  "slot_values": {
                    "parent": {
                      "@r": 3
                    },
                    "RenderContent": {
                      "@t": "MessageHandler",
                      "data": "function() { return [h('div', null, ['Editing Slot ', this.slot]), h('textarea', {onkeyup: (e) => this.code = e.target.value}, this.code), h('button', {onclick: () => this.target[this.slot] = _MakeMessageHandler(this.code)}, 'Save')]; }"
                    },
                    "New": {
                      "@t": "MessageHandler",
                      "data": "function(target, slot) { let inst = this.Extend(); inst.AddSlot('target', target); inst.AddSlot('slot', slot); inst.AddSlot('code', _GetMessageHandlerCode(target[slot])); return inst; }"
                    }
                  },
                  "slot_annotations": {},
                  "prototype_slots": [
                    "parent"
                  ]
                }
              },
              "ObjectEditor": {
                "@t": "ProtoObject",
                "data": {
                  "annotations": {
                    "name": "ObjectEditor",
                    "description": "The default editor for objects."
                  },
                  "slot_values": {
                    "parent": {
                      "@r": 3
                    },
                    "GetTitle": {
                      "@t": "MessageHandler",
                      "data": "function() {\n    return 'ObjectEditor: ' + (this.target.GetAnnotation('name') || \"Unnamed Object\");\n}"
                    },
                    "RenderContent": {
                      "@t": "MessageHandler",
                      "data": "function() {\n  return h('div', null, [\n    this.target.GetAnnotation('description'),\n    this.target.GetSlotNames().map(slot => {\n      let value = this.target[slot]; \n      if (_IsMessageHandler(value)) {\n        return [h('div', null, slot), h('button', {onclick: () => RootPackage.InterfacePackage.HandlerEditor.New(this.target, slot).Open() }, ['Edit Code'])];\n      }\n      if (_IsProtoObject(value)) {\n        return h('div', null, [slot + \" \", h('button', {onclick: () => value.OpenEditor() }, value.toString()) ]);\n      }\n      return h('div', null, [slot, value.toString() ]);\n   } )]);\n}"
                    },
                    "New": {
                      "@t": "MessageHandler",
                      "data": "function(target) { let inst = this.Extend(); inst.AddSlot('target', target); return inst; }"
                    }
                  },
                  "slot_annotations": {},
                  "prototype_slots": [
                    "parent"
                  ]
                }
              }
            },
            "slot_annotations": {},
            "prototype_slots": [
              "parent"
            ]
          }
        }
      },
      "slot_annotations": {},
      "prototype_slots": [
        "parent"
      ]
    }
  },
  {
    "@t": "ProtoObject",
    "data": {
      "annotations": {
        "name": "TraitsPackage"
      },
      "slot_values": {
        "parent": {
          "@r": 2
        }
      },
      "slot_annotations": {},
      "prototype_slots": [
        "parent"
      ]
    }
  },
  {
    "@t": "ProtoObject",
    "data": {
      "annotations": {
        "name": "TopObject"
      },
      "slot_values": {
        "AddSlot": {
          "@t": "MessageHandler",
          "data": "function(name, value) {\n  _AddSlot(this, name, value);\n}"
        },
        "Extend": {
          "@t": "MessageHandler",
          "data": "function(name, value) {\n  let child = _EmptyObject();\n  _AddSlot(child, 'parent', this)\n  _AddPrototypeSlot(child, 'parent')\n  return child;\n}"
        },
        "SetAnnotation": {
          "@t": "MessageHandler",
          "data": "\nfunction(name, value) {\n\t_SetAnnotation(this, name, value);\n}\n"
        },
        "GetAnnotation": {
          "@t": "MessageHandler",
          "data": "\nfunction(name) {\n\treturn _GetAnnotation(this, name);\n}\n"
        },
        "GetSlotNames": {
          "@t": "MessageHandler",
          "data": "\nfunction() {\n\treturn _GetSlotNames(this);\n}\n"
        },
        "CreateEditor": {
          "@t": "MessageHandler",
          "data": "\nfunction() {\n\treturn RootPackage.InterfacePackage.ObjectEditor.New(this);\n}\n"
        },
        "OpenEditor": {
          "@t": "MessageHandler",
          "data": "\nfunction() {\n\treturn this.CreateEditor().Open();\n}\n"
        }
      },
      "slot_annotations": {},
      "prototype_slots": []
    }
  },
  {
    "@t": "ProtoObject",
    "data": {
      "annotations": {
        "name": "TraitsWindow"
      },
      "slot_values": {
        "parent": {
          "@r": 2
        },
        "Open": {
          "@t": "MessageHandler",
          "data": "function() { RootPackage.InterfacePackage.WindowManager.AddWindow(this) }"
        },
        "Close": {
          "@t": "MessageHandler",
          "data": "function() { RootPackage.InterfacePackage.WindowManager.RemoveWindow(this) }"
        },
        "Update": {
          "@t": "MessageHandler",
          "data": "function(dt) {}"
        },
        "RenderContent": {
          "@t": "MessageHandler",
          "data": "function() { }"
        },
        "GetTitle": {
          "@t": "MessageHandler",
          "data": "function() { return 'Untitled Window'; }"
        },
        "Render": {
          "@t": "MessageHandler",
          "data": "function() { return [h('hr'), this.GetTitle(), h('button', {onclick: () => RootPackage.InterfacePackage.ObjectEditor.New(this).Open()}, 'Inspect Window Object'), h('button', {onclick: () => this.Close()}, 'Close'), this.RenderContent(), h('hr')]; }"
        }
      },
      "slot_annotations": {},
      "prototype_slots": [
        "parent"
      ]
    }
  }
]
